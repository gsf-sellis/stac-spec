openapi: 3.0.1
paths:
  '/collections/{collectionId}/items':
    post:
      summary: Add a new item to a collection
      description: Create a new item in a specific collection
      operationId: postItem
      tags:
        - CRUD Extension
      parameters:
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/json:
            schema:
                oneOf:
                 - $ref: '#/components/schemas/item'
                 - $ref: '#/components/schemas/itemCollection'
      responses:
        '201':
          description: Create request succeeded for a single item.
          headers:
            Location:
              description: A link to the item
              schema:
                type: string
                format: url
            ETag:
              schema:
                type: string
              description: A string to ensure the item has not been modified
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/item'
        '207':
          description: Multi-Status response for creating multiple items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multiStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  '/collections/{collectionId}/items/{featureId}':
    get:
      responses:
        '200':
          description: Get request succeeded.
          headers:
            ETag:
              schema:
                type: string
              description: A string to ensure the item has not been modified
    put:
      summary: Update an existing item by id with a complete item definition
      description: >-
        Use this method to update an existing item. Requires the entire
        GeoJSON item description be submitted.
      operationId: putItem
      tags:
        - CRUD Extension
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/featureId'
        - $ref: '#/components/parameters/IfMatch'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item'
      responses:
        '200':
          description: Put request succeeded.
          headers:
            ETag:
              schema:
                type: string
              description: A string to ensure the item has not been modified
          content:
            application/json:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    patch:
      summary: Update an existing item by id with a partial item definition
      description: >-
        Use this method to update an existing item. Requires a GeoJSON
        fragment (containing the fields to be updated) be submitted.
      operationId: patchItem
      tags:
        - CRUD Extension
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/featureId'
        - $ref: '#/components/parameters/IfMatchOptional'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/partialItem'
      responses:
        '200':
          description: Patch request succeeded.
          headers:
            ETag:
              schema:
                type: string
              description: A string to ensure the item has not been modified
          content:
            application/json:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    delete:
      summary: Delete an existing item by id
      description: Use this method to delete an existing item.
      operationId: deleteItem
      tags:
        - CRUD Extension
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/featureId'
        - $ref: '#/components/parameters/IfMatch'
      responses:
        '204':
          description: Delete request succeeded.
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
components:
  parameters:
    IfMatch:
      name: If-Match
      in: header
      description: >-
        Only take the action if the ETag of the item still matches the If-Match header of the request
      required: true
      schema:
        type: string
    IfMatchOptional:
      name: If-Match
      in: header
      description: >-
        Only take the action if the ETag of the item still matches the If-Match header of the request
      required: false
      schema:
        type: string
  schemas:
    partialItem:
      type: object
      properties:
        stac_version:
          $ref: '#/components/schemas/stac_version'
        stac_extensions:
          $ref: '#/components/schemas/stac_extensions'
        id:
          $ref: '#/components/schemas/featureId'
        bbox:
          $ref: '#/components/schemas/bbox'
        geometry:
          $ref: 'https://geojson.org/schema/Geometry.json'
        type:
          $ref: '#/components/schemas/itemType'
        properties:
          $ref: '#/components/schemas/partialItemProperties'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        assets:
          $ref: '#/components/schemas/itemAssets'
          example:
            assets:
              analytic:
                title: 1-Band Analytic
                href: http://cool-sat.com/catalog/collections/cs/items/CS3-201605XX_132130_04/analytic-1.tif
    partialItemProperties:
      type: object
      description: A subset of an item's fields
      additionalProperties: true
      properties:
        datetime:
          $ref: '#/components/schemas/datetime'
    multiStatus:
      type: object
      description: Provides status information about the result of a bulk request
      additionalProperties: true
      properties:
        multistatus:
          type: array
          items:
            $ref: '#/components/schemas/multiStatusResponse'
        metadata:
          type: object
          items:
            $ref: '#/components/schemas/multiStatusMetadata'
    multiStatusResponse:
      type: object
      description: Provides status information about a single operation within a bulk request
      additionalProperties: true
      properties:
        status:
          type: number
          description: The http status code of the response
        message:
          type: string
          description: A message describing the status of a single operation within a bulk request
        href:
          description: A link to the resulting resource from a bulk request on a single item
          $ref: '#/components/schemas/link'
    multiStatusMetadata:
      type: object
      description: Provides metadata information about a bulk request
      additionalProperties: true
      properties:
        succeeded:
          type: number
          description: The number of operations that succeeded in a bulk request
        failed:
          type: number
          description: The number of operations that failed in a bulk request
        total:
          type: number
          description: The total number of operations performed in a bulk request
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    BadRequest:
      description: The request was malformed or semantically invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    PreconditionFailed:
      description: >-
        The ETag of the item did not match the If-Match header of the request, or the etag value of the item in the bulk request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    InternalServerError:
      description: The request was syntactically and semantically valid, but an error occurred while trying to act upon it
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
tags:
  - name: CRUD Extension
    description: >-
      STAC-specific operations to add, remove, and edit items within WFS3
      collections.
